"""Initial Migration

Revision ID: 813fb7c2fff4
Revises: 
Create Date: 2025-04-05 03:39:31.982564

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '813fb7c2fff4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_settings_id', table_name='settings')
    op.drop_table('settings')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.add_column('dashboard_stats', sa.Column('total_faces', sa.Integer(), nullable=True))
    op.add_column('dashboard_stats', sa.Column('login_attempts', sa.Integer(), nullable=True))
    op.alter_column('dashboard_stats', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('dashboard_stats', 'total_login_attempts')
    op.drop_column('dashboard_stats', 'day_of_week')
    op.drop_column('dashboard_stats', 'location')
    op.drop_column('dashboard_stats', 'updated_at')
    op.drop_column('dashboard_stats', 'total_faces_detected')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('dashboard_stats', sa.Column('total_faces_detected', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('dashboard_stats', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('dashboard_stats', sa.Column('location', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('dashboard_stats', sa.Column('day_of_week', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
    op.add_column('dashboard_stats', sa.Column('total_login_attempts', sa.INTEGER(), autoincrement=False, nullable=True))
    op.alter_column('dashboard_stats', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('dashboard_stats', 'login_attempts')
    op.drop_column('dashboard_stats', 'total_faces')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('two_factor_auth', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('session_timeout', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('system_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('email_alerts', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('cache_size_mb', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cache_file_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='settings_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='settings_pkey'),
    sa.UniqueConstraint('user_id', name='settings_user_id_key')
    )
    op.create_index('ix_settings_id', 'settings', ['id'], unique=False)
    # ### end Alembic commands ###
